version: '3.1'  #1
services:
  wordpress:
    image: wordpress
    restart: unless-stopped
    container_name: wordpress-CUSTOMER
    environment:
      WORDPRESS_DB_HOST: wordpress-db
      WORDPRESS_DB_USER: CUSTOMER
      WORDPRESS_DB_PASSWORD: PASSWORDS
      WORDPRESS_DB_NAME: wordpress-CUSTOMER
    volumes:
      - ./app:/var/www/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wordpress-CUSTOMER-ssl.entrypoints=https"
      - "traefik.http.routers.wordpress-CUSTOMER-ssl.rule=Host(`FQDN`)"
      - "traefik.http.routers.wordpress-CUSTOMER-ssl.middlewares=default@file"
      - "traefik.http.routers.wordpress-CUSTOMER-ssl.tls=true"
      - "traefik.http.routers.wordpress-CUSTOMER-ssl.tls.certresolver=http"
      - "traefik.http.routers.wordpress-CUSTOMER-ssl.service=wordpress-CUSTOMER-ssl"
      - "traefik.http.services.wordpress-CUSTOMER-ssl.loadbalancer.server.port=80"
      - "traefik.docker.network=proxy"
    networks:
      - proxy
      - default
      
  wpcli:
    image: wordpress:cli
    environment:
      WORDPRESS_DB_HOST: wordpress-db
      WORDPRESS_DB_USER: CUSTOMER
      WORDPRESS_DB_PASSWORD: PASSWORDS
      WORDPRESS_DB_NAME: wordpress-CUSTOMER
    volumes:
      - ./app:/var/www/html/
    depends_on:
      - wordpress-db
      - wordpress
    user: xfs      
      
  wordpress-db:
    image: mariadb:latest
    container_name: wordpress-db-CUSTOMER
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: wordpress-CUSTOMER
      MYSQL_USER: CUSTOMER
      MYSQL_PASSWORD: PASSWORDS
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - ./database:/var/lib/mysql
    networks:
      - default

  wordpress-redis:
    image: redis:alpine
    container_name: '${COMPOSE_PROJECT_NAME}-redis-sp'
    restart: unless-stopped
    networks:
      - default

      
networks:
  proxy:
    external: true
